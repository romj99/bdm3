import os
from pathlib import Path

import polars as pl
import streamlit as st
from deltalake import DeltaTable

EXPLOITATION_PATH = os.environ.get("EXPLOITATION_ZONE")

st.title("🏭 Exploitation Zone")
st.write(
    "In this section, you can view and manage the analytical datasets stored in the Exploitation Zone."
)

st.markdown("""
The Exploitation Zone contains processed and refined data that has been optimized for analysis and KPI calculations.
This includes aggregated metrics, analytical tables, and integrated datasets ready for business intelligence.
""")

if not EXPLOITATION_PATH or not os.path.exists(EXPLOITATION_PATH):
    st.warning(f"⚠️ Exploitation Zone path not found: `{EXPLOITATION_PATH}`")
    st.info(
        "Please ensure the exploitation pipeline has been run and the path is correctly configured."
    )
    st.stop()

# Find Delta table folders
delta_folders = []
for item in Path(EXPLOITATION_PATH).iterdir():
    if item.is_dir() and (item / "_delta_log").exists():
        delta_folders.append(item.name)

# Table viewer section
if delta_folders:
    st.subheader("📊 Table Viewer")

    # Folder selector
    selected_folder = st.selectbox("Select analytical dataset:", delta_folders)

    if selected_folder:
        table_path = os.path.join(EXPLOITATION_PATH, selected_folder)

        # Dataset info for selected folder
        datasets_info = {
            "property_analytics": "🏠 Property market metrics by district and neighborhood",
            "property_type_analytics": "🏘️ Property type distribution and pricing analysis",
            "socioeconomic_district_analytics": "💰 Income and demographic analytics by district",
            "socioeconomic_neighborhood_analytics": "🏘️ Neighborhood-level socioeconomic data",
            "income_quintiles": "📊 Income distribution and quintile classifications",
            "cultural_district_analytics": "🎭 Cultural facility density by district",
            "cultural_neighborhood_analytics": "🎨 Neighborhood cultural amenities analysis",
            "cultural_category_analytics": "📚 Cultural facility category breakdown",
            "integrated_analytics": "🔗 Combined dataset for composite KPIs and analysis",
        }

        description = datasets_info.get(selected_folder, "📈 Analytical dataset")

        with st.container(border=True):
            col1, col2 = st.columns([3, 1])
            with col1:
                st.markdown(f"**{selected_folder}**")
                st.markdown(description)
            with col2:
                # Count files in the dataset directory
                file_count = len(
                    [
                        f
                        for f in os.listdir(table_path)
                        if os.path.isfile(os.path.join(table_path, f))
                    ]
                )
                st.metric("Files", file_count)
                st.caption("Delta Table")

        # Load and show table snapshot
        try:
            delta_table = DeltaTable(table_path).to_pyarrow_table()
            df = pl.from_arrow(delta_table).head(100)

            st.subheader("📊 Data Preview")
            st.write(f"Showing first 100 rows of {df.shape[0]:,} total rows")

            st.dataframe(df, use_container_width=True)

            st.subheader("📊 Statistics")
            st.dataframe(df.describe(), use_container_width=True)

        except Exception as e:
            st.error(f"Error loading table: {e}")

st.divider()

# Additional information section
st.divider()

st.subheader("📈 Dataset Descriptions")

with st.expander("🏠 Property Analytics"):
    st.markdown("""
    **Purpose**: Housing market analysis and affordability metrics
    
    **Contents**:
    - Average price per m² by district and neighborhood
    - Property availability and market supply analysis
    - Property type distribution and pricing
    - Market accessibility indicators
    
    **Key KPIs**: Price trends, affordability ratios, market density
    """)

with st.expander("💰 Socioeconomic Analytics"):
    st.markdown("""
    **Purpose**: Income distribution and demographic analysis
    
    **Contents**:
    - Income inequality indices by district
    - Neighborhood-level economic indicators
    - Population demographics and trends
    - Income quintile classifications
    
    **Key KPIs**: Income inequality, economic accessibility, demographic patterns
    """)

with st.expander("🎭 Cultural Analytics"):
    st.markdown("""
    **Purpose**: Cultural facility distribution and accessibility
    
    **Contents**:
    - Cultural site density per 1000 residents
    - Facility type and category analysis
    - Geographic distribution of cultural amenities
    - Cultural accessibility metrics
    
    **Key KPIs**: Cultural density, accessibility equity, amenity distribution
    """)

with st.expander("🔗 Integrated Analytics"):
    st.markdown("""
    **Purpose**: Combined analysis for composite KPIs
    
    **Contents**:
    - Neighborhood attractiveness scores
    - Housing affordability ratios
    - Spatial equity indices
    - Market accessibility classifications
    
    **Key KPIs**: Composite attractiveness, affordability, spatial equity
    """)

st.info(
    "💡 **Tip**: Use the Data Sanity section to view detailed quality metrics and validation results for these datasets."
)
